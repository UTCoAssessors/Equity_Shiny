shiny::runApp()
runApp()
runApp()
source("~/GitHub/Equity_Shiny/Equity/potential_comps.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste0(0, data$serno)
paste0(0, df$serno)
df$serno
x$SERIAL
Preds$serno
runApp()
runApp()
runApp()
source("~/GitHub/Equity_Shiny/Equity/potential_comps.R", echo=TRUE)
runApp()
x$SERIAL
x$SERIAL == '050520026'
x$SERIAL[x$SERIAL == '050520026']
x[x$SERIAL == '050520026']
x[x$SERIAL == '050520026',]
Preds[Preds$serno == 050520026,]
df$serno
df$serno ==050520026
sum(df$serno ==050520026)
sum(df$serno =='050520026')
df[df$serno == '050520026', 'lat']
df[df$serno == '050520026', 'long']
Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(length(serno) == 8, paste0('0', serno), serno))
runApp()
Preds <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(length(serno) == 8, paste0('0', serno), serno))
Preds
Preds$serno
runApp()
runApp()
getwd()
# import test data set
df <- readRDS("./data/cleaned_data_w_lat-long.RDS")
# import test data set
df <- readRDS("./data/cleaned_data_w_lat-long.rds")
source("~/GitHub/Equity_Shiny/Equity/potential_comps.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
Preds <- read.csv('./data/FinalResultsSFR.csv') %>%
janitor::clean_names() %>%
dplyr::select(serno, adjusted_prediction_cap, adjusted_prediction, total_2022_value, re_res, re_agr, re_com, im_agr, pct_change)
Preds$pct_change
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
Preds <- read.csv('./data/FinalPreds.csv') %>%
janitor::clean_names() %>%
dplyr::select(serno, scaled_pred_cap, adjusted_prediction_cap, adjusted_prediction, tot_val_2022, re_res, re_agr, re_com, im_agr, pct_change)
runApp()
runApp()
runApp()
Preds <- read.csv('./data/FinalPreds.csv') %>%
janitor::clean_names() %>%
dplyr::select(serno, tasp, adjusted_prediction_cap, adjusted_prediction, tot_val_2022, re_res, re_agr, re_com, im_agr, pct_change)
Preds <- read.csv('./data/FinalPreds.csv') %>%
janitor::clean_names() %>%
dplyr::select(serno, tapsp, scaled_pred_cap, scaled_pred, adjusted_prediction_cap, adjusted_prediction, tot_val_2022, re_res, re_agr, re_com, im_agr, pct_change)
shiny::runApp()
runApp()
Preds
Preds %>%
dplyr::filter(!is.na(tasp))
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap))
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp))
Preds %>%
dplyr::left_join(df)%>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
diff_that)
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
diff_that = abs(tot_val_2022 - tasp))
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that). 1,0)
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that), 1,0)
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0))
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min)
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
vector
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame %>%
vector
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame
Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame %>% head
which_min <- Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame
mean(which_min$which_min)
mean(which_min$which_min, na.rn = T)
mean(which_min$which_min, na.rm= T)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(which_min, dif_this, dif_that) %>%
data.frame
mean(which_min$which_min, na.rm= T)
mean(which_min$dif_this - which_min$dif_that)
mean(which_min$dif_this - which_min$dif_that, na.rm = T)
sd(which_min$dif_this - which_min$dif_that, na.rm = T)
max(which_min$dif_this - which_min$dif_that, na.rm = T)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, which_min, dif_this, dif_that) %>%
data.frame
mean(which_min$which_min, na.rm= T)
max(which_min$dif_this - which_min$dif_that, na.rm = T)
which.max(which_min$dif_this - which_min$dif_that, na.rm = T)
which.max(which_min$dif_this - which_min$dif_that)
which_min[13647]
which_min[13647,]
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, which_min, dif_this, dif_that, tasp) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min[13647,]
which_min
which_min <- Preds %>%
dplyr::filter(!is.na(tasp), year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediciton_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 ))
which_min <- Preds %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediciton_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 ))
which_min <- Preds %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
which_min <- Preds %>%
dplyr::fitler(!is.na(tasp))
which_min <- Preds %>%
dplyr::fitler(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
which_min <- Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::filter(!is.na(tasp)) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 0, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
Valuation::ratio_stats(which_min$preds, which_min$tasp)
Valuation::ratio_stats(which_min$adjusted_prediction_cap, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 0, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022, year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022, year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 0, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022, year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 0, tot_val_2022, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022, year_built < 2021) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, tot_val_2022 )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
which_min <- Preds %>%
dplyr::mutate(serno = as.character(serno),
serno = ifelse(nchar(serno) == 8, paste0('0', serno), serno)) %>%
dplyr::left_join(df) %>%
dplyr::filter(!is.na(tasp), sold_year == 2022) %>%
dplyr::mutate(dif_this = abs(adjusted_prediction_cap - tasp),
dif_that = abs(tot_val_2022 - tasp),
which_min = ifelse(dif_this < dif_that,1,0)) %>%
dplyr::select(serno, adjusted_prediction_cap, tot_val_2022, which_min, dif_this, dif_that, tasp) %>%
dplyr::mutate(preds = ifelse(which_min == 1, adjusted_prediction_cap, adjusted_prediction_cap )) %>%
data.frame
mean(which_min$which_min, na.rm= T)
which.max(which_min$dif_this - which_min$dif_that)
which_min
Valuation::ratio_stats(which_min$preds, which_min$tasp)
